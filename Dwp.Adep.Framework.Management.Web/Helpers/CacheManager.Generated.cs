//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Web;
using AutoMapper;
using Dwp.Adep.Framework.Management.Web.AdminService;
using Dwp.Adep.Framework.Management.Web.Models;

namespace Dwp.Adep.Framework.Management.Web.Helpers
{
    // Manages items which need to be placed in Web cache
    public static partial class CacheManager 
    {
    
    	private const string ApplicationListsKey = "APPLICATIONLISTS";
    
    	public static ApplicationLookupListsCacheObject ApplicationListCache
    	{
    	    get { return Get<ApplicationLookupListsCacheObject>(ApplicationListsKey, GetApplicationAndLookups); }
    	}
     
    	private static ApplicationLookupListsCacheObject GetApplicationAndLookups()
    	{
    	            
    		AdminServiceClient sc = new AdminServiceClient();
    		ApplicationVMDC returnObject = sc.GetApplication(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    ApplicationLookupListsCacheObject CachedLists = new ApplicationLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string ApplicationAttributeListsKey = "APPLICATIONATTRIBUTELISTS";
    
    	public static ApplicationAttributeLookupListsCacheObject ApplicationAttributeListCache
    	{
    	    get { return Get<ApplicationAttributeLookupListsCacheObject>(ApplicationAttributeListsKey, GetApplicationAttributeAndLookups); }
    	}
     
    	private static ApplicationAttributeLookupListsCacheObject GetApplicationAttributeAndLookups()
    	{
    	            
    		AdminServiceClient sc = new AdminServiceClient();
    		ApplicationAttributeVMDC returnObject = sc.GetApplicationAttribute(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    ApplicationAttributeLookupListsCacheObject CachedLists = new ApplicationAttributeLookupListsCacheObject();
    		
    		CachedLists.ApplicationList = Mapper.Map<IEnumerable<ApplicationDC>, List<ApplicationModel>>(returnObject.ApplicationList);
        	return CachedLists;           
    	}
    
    	private const string AuditListsKey = "AUDITLISTS";
    
    	public static AuditLookupListsCacheObject AuditListCache
    	{
    	    get { return Get<AuditLookupListsCacheObject>(AuditListsKey, GetAuditAndLookups); }
    	}
     
    	private static AuditLookupListsCacheObject GetAuditAndLookups()
    	{
    	            
    		AdminServiceClient sc = new AdminServiceClient();
    		AuditVMDC returnObject = sc.GetAudit(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    AuditLookupListsCacheObject CachedLists = new AuditLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string CountryListsKey = "COUNTRYLISTS";
    
    	public static CountryLookupListsCacheObject CountryListCache
    	{
    	    get { return Get<CountryLookupListsCacheObject>(CountryListsKey, GetCountryAndLookups); }
    	}
     
    	private static CountryLookupListsCacheObject GetCountryAndLookups()
    	{
    	            
    		AdminServiceClient sc = new AdminServiceClient();
    		CountryVMDC returnObject = sc.GetCountry(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    CountryLookupListsCacheObject CachedLists = new CountryLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string GradeListsKey = "GRADELISTS";
    
    	public static GradeLookupListsCacheObject GradeListCache
    	{
    	    get { return Get<GradeLookupListsCacheObject>(GradeListsKey, GetGradeAndLookups); }
    	}
     
    	private static GradeLookupListsCacheObject GetGradeAndLookups()
    	{
    	            
    		AdminServiceClient sc = new AdminServiceClient();
    		GradeVMDC returnObject = sc.GetGrade(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    GradeLookupListsCacheObject CachedLists = new GradeLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string HolidayListsKey = "HOLIDAYLISTS";
    
    	public static HolidayLookupListsCacheObject HolidayListCache
    	{
    	    get { return Get<HolidayLookupListsCacheObject>(HolidayListsKey, GetHolidayAndLookups); }
    	}
     
    	private static HolidayLookupListsCacheObject GetHolidayAndLookups()
    	{
    	            
    		AdminServiceClient sc = new AdminServiceClient();
    		HolidayVMDC returnObject = sc.GetHoliday(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    HolidayLookupListsCacheObject CachedLists = new HolidayLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string NonStandardHolidayListsKey = "NONSTANDARDHOLIDAYLISTS";
    
    	public static NonStandardHolidayLookupListsCacheObject NonStandardHolidayListCache
    	{
    	    get { return Get<NonStandardHolidayLookupListsCacheObject>(NonStandardHolidayListsKey, GetNonStandardHolidayAndLookups); }
    	}
     
    	private static NonStandardHolidayLookupListsCacheObject GetNonStandardHolidayAndLookups()
    	{
    	            
    		AdminServiceClient sc = new AdminServiceClient();
    		NonStandardHolidayVMDC returnObject = sc.GetNonStandardHoliday(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    NonStandardHolidayLookupListsCacheObject CachedLists = new NonStandardHolidayLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string OrganisationListsKey = "ORGANISATIONLISTS";
    
    	public static OrganisationLookupListsCacheObject OrganisationListCache
    	{
    	    get { return Get<OrganisationLookupListsCacheObject>(OrganisationListsKey, GetOrganisationAndLookups); }
    	}
     
    	private static OrganisationLookupListsCacheObject GetOrganisationAndLookups()
    	{
    	            
    		AdminServiceClient sc = new AdminServiceClient();
    		OrganisationVMDC returnObject = sc.GetOrganisation(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    OrganisationLookupListsCacheObject CachedLists = new OrganisationLookupListsCacheObject();
    		
    		CachedLists.OrganisationTypeList = Mapper.Map<IEnumerable<OrganisationTypeDC>, List<OrganisationTypeModel>>(returnObject.OrganisationTypeList);
        	return CachedLists;           
    	}
    
    	private const string OrganisationTypeListsKey = "ORGANISATIONTYPELISTS";
    
    	public static OrganisationTypeLookupListsCacheObject OrganisationTypeListCache
    	{
    	    get { return Get<OrganisationTypeLookupListsCacheObject>(OrganisationTypeListsKey, GetOrganisationTypeAndLookups); }
    	}
     
    	private static OrganisationTypeLookupListsCacheObject GetOrganisationTypeAndLookups()
    	{
    	            
    		AdminServiceClient sc = new AdminServiceClient();
    		OrganisationTypeVMDC returnObject = sc.GetOrganisationType(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    OrganisationTypeLookupListsCacheObject CachedLists = new OrganisationTypeLookupListsCacheObject();
    		
    		CachedLists.OrganisationTypeGroupList = Mapper.Map<IEnumerable<OrganisationTypeGroupDC>, List<OrganisationTypeGroupModel>>(returnObject.OrganisationTypeGroupList);
    		CachedLists.ParentOrganisationTypeList = Mapper.Map<IEnumerable<OrganisationTypeDC>, List<OrganisationTypeModel>>(returnObject.ParentOrganisationTypeList);
        	return CachedLists;           
    	}
    
    	private const string OrganisationTypeGroupListsKey = "ORGANISATIONTYPEGROUPLISTS";
    
    	public static OrganisationTypeGroupLookupListsCacheObject OrganisationTypeGroupListCache
    	{
    	    get { return Get<OrganisationTypeGroupLookupListsCacheObject>(OrganisationTypeGroupListsKey, GetOrganisationTypeGroupAndLookups); }
    	}
     
    	private static OrganisationTypeGroupLookupListsCacheObject GetOrganisationTypeGroupAndLookups()
    	{
    	            
    		AdminServiceClient sc = new AdminServiceClient();
    		OrganisationTypeGroupVMDC returnObject = sc.GetOrganisationTypeGroup(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    OrganisationTypeGroupLookupListsCacheObject CachedLists = new OrganisationTypeGroupLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string StaffListsKey = "STAFFLISTS";
    
    	public static StaffLookupListsCacheObject StaffListCache
    	{
    	    get { return Get<StaffLookupListsCacheObject>(StaffListsKey, GetStaffAndLookups); }
    	}
     
    	private static StaffLookupListsCacheObject GetStaffAndLookups()
    	{
    	            
    		AdminServiceClient sc = new AdminServiceClient();
    		StaffVMDC returnObject = sc.GetStaff(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    StaffLookupListsCacheObject CachedLists = new StaffLookupListsCacheObject();
    		
    		CachedLists.GradeList = Mapper.Map<IEnumerable<GradeDC>, List<GradeModel>>(returnObject.GradeList);
        	return CachedLists;           
    	}
    
    	private const string StaffAttributesListsKey = "STAFFATTRIBUTESLISTS";
    
    	public static StaffAttributesLookupListsCacheObject StaffAttributesListCache
    	{
    	    get { return Get<StaffAttributesLookupListsCacheObject>(StaffAttributesListsKey, GetStaffAttributesAndLookups); }
    	}
     
    	private static StaffAttributesLookupListsCacheObject GetStaffAttributesAndLookups()
    	{
    	            
    		AdminServiceClient sc = new AdminServiceClient();
    		StaffAttributesVMDC returnObject = sc.GetStaffAttributes(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    StaffAttributesLookupListsCacheObject CachedLists = new StaffAttributesLookupListsCacheObject();
    		
    		CachedLists.StaffList = Mapper.Map<IEnumerable<StaffDC>, List<StaffModel>>(returnObject.StaffList);
    		CachedLists.ApplicationList = Mapper.Map<IEnumerable<ApplicationDC>, List<ApplicationModel>>(returnObject.ApplicationList);
    		CachedLists.ApplicationAttributeList = Mapper.Map<IEnumerable<ApplicationAttributeDC>, List<ApplicationAttributeModel>>(returnObject.ApplicationAttributeList);
        	return CachedLists;           
    	}
    
    	private const string StaffDetailsListsKey = "STAFFDETAILSLISTS";
    
    	public static StaffDetailsLookupListsCacheObject StaffDetailsListCache
    	{
    	    get { return Get<StaffDetailsLookupListsCacheObject>(StaffDetailsListsKey, GetStaffDetailsAndLookups); }
    	}
     
    	private static StaffDetailsLookupListsCacheObject GetStaffDetailsAndLookups()
    	{
    	            
    		AdminServiceClient sc = new AdminServiceClient();
    		StaffDetailsVMDC returnObject = sc.GetStaffDetails(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    StaffDetailsLookupListsCacheObject CachedLists = new StaffDetailsLookupListsCacheObject();
    		
    		CachedLists.StaffList = Mapper.Map<IEnumerable<StaffDC>, List<StaffModel>>(returnObject.StaffList);
    		CachedLists.StaffOfficeList = Mapper.Map<IEnumerable<StaffOfficesDC>, List<StaffOfficesModel>>(returnObject.StaffOfficeList);
        	return CachedLists;           
    	}
    
    	private const string StaffOfficesListsKey = "STAFFOFFICESLISTS";
    
    	public static StaffOfficesLookupListsCacheObject StaffOfficesListCache
    	{
    	    get { return Get<StaffOfficesLookupListsCacheObject>(StaffOfficesListsKey, GetStaffOfficesAndLookups); }
    	}
     
    	private static StaffOfficesLookupListsCacheObject GetStaffOfficesAndLookups()
    	{
    	            
    		AdminServiceClient sc = new AdminServiceClient();
    		StaffOfficesVMDC returnObject = sc.GetStaffOffices(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    StaffOfficesLookupListsCacheObject CachedLists = new StaffOfficesLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string StaffOrganisationListsKey = "STAFFORGANISATIONLISTS";
    
    	public static StaffOrganisationLookupListsCacheObject StaffOrganisationListCache
    	{
    	    get { return Get<StaffOrganisationLookupListsCacheObject>(StaffOrganisationListsKey, GetStaffOrganisationAndLookups); }
    	}
     
    	private static StaffOrganisationLookupListsCacheObject GetStaffOrganisationAndLookups()
    	{
    	            
    		AdminServiceClient sc = new AdminServiceClient();
    		StaffOrganisationVMDC returnObject = sc.GetStaffOrganisation(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    StaffOrganisationLookupListsCacheObject CachedLists = new StaffOrganisationLookupListsCacheObject();
    		
    		CachedLists.StaffList = Mapper.Map<IEnumerable<StaffDC>, List<StaffModel>>(returnObject.StaffList);
    		CachedLists.OrganisationList = Mapper.Map<IEnumerable<OrganisationDC>, List<OrganisationModel>>(returnObject.OrganisationList);
    		CachedLists.ApplicationList = Mapper.Map<IEnumerable<ApplicationDC>, List<ApplicationModel>>(returnObject.ApplicationList);
        	return CachedLists;           
    	}
    }
    
    // Manages cached lookup lists for Application
    public class ApplicationLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for ApplicationAttribute
    public class ApplicationAttributeLookupListsCacheObject
    {
    	public List<ApplicationModel> ApplicationList { get; set; }
     
    }
    	
    // Manages cached lookup lists for Audit
    public class AuditLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for Country
    public class CountryLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for Grade
    public class GradeLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for Holiday
    public class HolidayLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for NonStandardHoliday
    public class NonStandardHolidayLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for Organisation
    public class OrganisationLookupListsCacheObject
    {
    	public List<OrganisationTypeModel> OrganisationTypeList { get; set; }
     
    }
    	
    // Manages cached lookup lists for OrganisationType
    public class OrganisationTypeLookupListsCacheObject
    {
    	public List<OrganisationTypeGroupModel> OrganisationTypeGroupList { get; set; }
    	public List<OrganisationTypeModel> ParentOrganisationTypeList { get; set; }
     
    }
    	
    // Manages cached lookup lists for OrganisationTypeGroup
    public class OrganisationTypeGroupLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for Staff
    public class StaffLookupListsCacheObject
    {
    	public List<GradeModel> GradeList { get; set; }
     
    }
    	
    // Manages cached lookup lists for StaffAttributes
    public class StaffAttributesLookupListsCacheObject
    {
    	public List<StaffModel> StaffList { get; set; }
    	public List<ApplicationModel> ApplicationList { get; set; }
    	public List<ApplicationAttributeModel> ApplicationAttributeList { get; set; }
     
    }
    	
    // Manages cached lookup lists for StaffDetails
    public class StaffDetailsLookupListsCacheObject
    {
    	public List<StaffModel> StaffList { get; set; }
    	public List<StaffOfficesModel> StaffOfficeList { get; set; }
     
    }
    	
    // Manages cached lookup lists for StaffOffices
    public class StaffOfficesLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for StaffOrganisation
    public class StaffOrganisationLookupListsCacheObject
    {
    	public List<StaffModel> StaffList { get; set; }
    	public List<OrganisationModel> OrganisationList { get; set; }
    	public List<ApplicationModel> ApplicationList { get; set; }
     
    }
    	
}
