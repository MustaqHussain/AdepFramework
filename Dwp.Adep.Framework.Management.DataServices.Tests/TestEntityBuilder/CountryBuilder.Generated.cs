//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using Dwp.Adep.Framework.Management.DataServices;
using Dwp.Adep.Framework.Management.DataServices.Models;

namespace Dwp.Adep.Framework.Management.DataServices.Tests.TestEntityBuilder
{
    public static partial class CountryBuilder
    {
        #region Create Method
        public static Country Create()
        {
            return new Country
            {
    				Code = Guid.NewGuid(),
    				SecurityLabel = Guid.NewGuid(),
    				Description = "test Description",
    				IsFrozenRate = false,
    				IsEC = false,
    				IsRA = false,
    				IsANZAC = false,
    				Nationality = "test Nationality",
    				CountryCode = "test CountryCode",
    				Notes = "test Notes",
    				IsActive = false,
    				RowIdentifier = null
            };
        }

        #endregion
    
        #region With Methods
       	public static Country WithCode(this Country country, Guid code)
        {
            country.Code = code;
            return country;
        }
       	public static Country WithSecurityLabel(this Country country, Guid securityLabel)
        {
            country.SecurityLabel = securityLabel;
            return country;
        }
       	public static Country WithDescription(this Country country, String description)
        {
            country.Description = description;
            return country;
        }
       	public static Country WithIsFrozenRate(this Country country, Boolean isFrozenRate)
        {
            country.IsFrozenRate = isFrozenRate;
            return country;
        }
       	public static Country WithIsEC(this Country country, Boolean isEC)
        {
            country.IsEC = isEC;
            return country;
        }
       	public static Country WithIsRA(this Country country, Boolean isRA)
        {
            country.IsRA = isRA;
            return country;
        }
       	public static Country WithIsANZAC(this Country country, Boolean isANZAC)
        {
            country.IsANZAC = isANZAC;
            return country;
        }
       	public static Country WithNationality(this Country country, String nationality)
        {
            country.Nationality = nationality;
            return country;
        }
       	public static Country WithCountryCode(this Country country, String countryCode)
        {
            country.CountryCode = countryCode;
            return country;
        }
       	public static Country WithNotes(this Country country, String notes)
        {
            country.Notes = notes;
            return country;
        }
       	public static Country WithIsActive(this Country country, Boolean isActive)
        {
            country.IsActive = isActive;
            return country;
        }
       	public static Country WithAccuracyCheck(this Country country, ICollection< AccuracyCheck> accuracyCheck)
        {
            country.AccuracyCheck = accuracyCheck;
            return country;
        }
    
       	public static Country WithOrganisation(this Country country, Organisation organisation)
        {
            country.Organisation = organisation;
            return country;
        }
    
       	public static Country WithCustomer(this Country country, ICollection< Customer> customer)
        {
            country.Customer = customer;
            return country;
        }
    
       	public static Country WithSecurityCheck(this Country country, ICollection< SecurityCheck> securityCheck)
        {
            country.SecurityCheck = securityCheck;
            return country;
        }
    

        #endregion
    }
}
